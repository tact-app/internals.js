name: Continuous delivery (Docker)

on:
  workflow_dispatch:
    inputs:
      reason:
        type: string
        default: manual healthcheck
        required: true

  push:
    tags: [ 'v*' ]

jobs:
  publish:
    name: Publishing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Login to Quay Container Registry
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Define metadata for images
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            octopot/tact-app-web
            ghcr.io/tact-app/web
            quay.io/tact-app/web
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          build-args: token=${{ secrets.FONTAWESOME_TOKEN }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  notify:
    name: Notifying
    needs: [ publish ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ‚ù§Ô∏è for everyone, OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: 'üê≥ ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
