name: Continuous delivery (Vercel)

on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

  push:
    branches: [ main ]
    paths:
      - '.github/workflows/cd.vercel.yml'
      - '.vercelignore'
      - '.babelrc'
      - '.eslintrc.json'
      - '.npmrc'
      - '.prettierrc'
      - 'package*.json'
      - '**.jsx?'
      - '**.tsx?'
      - '!docs/**/*'
      - '!tools/**/*'
    tags: [ '!*' ]

jobs:
  deploy:
    name: Deploying
    runs-on: ubuntu-latest
    environment:
      name: vercel
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.actor != 'kamilsk'

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: tools/package-lock.json
          check-latest: true

      - name: Install tools
        run: ./Taskfile tools npm ci
      - name: Build and deploy the project
        id: deployment
        run: |
          shopt -s expand_aliases
          alias run=./Taskfile
          run @token set vercel ${{ secrets.VERCEL_TOKEN }}
          run vercel pull --yes --environment=preview
          run vercel build
          echo page_url=$(run vercel deploy --prebuilt) >> $GITHUB_OUTPUT

  notify:
    name: Notifying
    needs: [ deploy ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Send notification
        uses: ./.github/actions/notify
        continue-on-error: true
        with:
          emoji: ðŸš€
          channel: ${{ secrets.SLACK_WEBHOOK }}
          success: ${{ ! contains(needs.*.result, 'failure') }}
