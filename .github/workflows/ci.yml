name: Continuous integration

on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/ci.yml'
      - 'package*.json'
      - '**.jsx?'
      - '**.tsx?'
      - '!docs/**/*'
      - '!tools/**/*'

  push:
    branches: [ main ]
    paths:
      - '.github/workflows/ci.yml'
      - 'package*.json'
      - '**.jsx?'
      - '**.tsx?'
      - '!docs/**/*'
      - '!tools/**/*'
    tags: [ '!*' ]

  schedule:
    - cron: 0 7 1 * * # at 07:00 on day-of-month 1, UTC

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json
          check-latest: true

      - name: Install dependencies
        run: npm ci
        env: { FONTAWESOME_TOKEN: '${{ secrets.FONTAWESOME_TOKEN }}' }
      - name: Build the application
        run: npm run build

  check:
    name: Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: tools/package-lock.json
          check-latest: true

      - name: Install dependencies
        run: ./Taskfile tools npm ci
      - name: Check application dependencies
        run: ./Taskfile @deps check

  notify:
    name: Notifying
    needs: [ build, check ]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (failure() || success())

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Send notification
        uses: ./.github/actions/notify
        continue-on-error: true
        with:
          emoji: ⚙️
          channel: ${{ secrets.SLACK_WEBHOOK }}
          success: ${{ ! contains(needs.*.result, 'failure') }}
